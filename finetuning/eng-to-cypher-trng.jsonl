{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: How many java developers attend more than one universities?", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), (p)-[:HAS_EDUCATION]->(e1:Education), (p)-[:HAS_EDUCATION]->(e2:Education) WHERE toLower(s.name) CONTAINS 'java' AND e1.university <> e2.university RETURN COUNT(DISTINCT p)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Where are most of pythonistas located?", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill) MATCH (p)-[:HAS_POSITION]->(pos:Position) WHERE toLower(s.name) CONTAINS 'python' WITH pos.location as location, COUNT(p) as num_pythonistas ORDER BY num_pythonistas DESC LIMIT 1 RETURN location, num_pythonistas```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Who went to most number of universities?", "output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education) WITH p, COUNT(e.university) as num_universities ORDER BY num_universities DESC LIMIT 1 RETURN p, num_universities```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Do I have any expert on mainframes?", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill) WHERE toLower(s.name) CONTAINS 'mainframes' AND toLower(s.level) CONTAINS 'expert' RETURN COUNT(p)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: How many are knowledgable on all of - java, python, javascript, security?", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill) WHERE (toLower(s.name) CONTAINS 'java' OR toLower(s.name) CONTAINS 'python' OR toLower(s.name) CONTAINS 'javascript' OR toLower(s.name) CONTAINS 'security') WITH p, COUNT(s) AS skill_count WHERE skill_count = 4 RETURN COUNT(p)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Where do most of them work at?", "output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company) RETURN c.name, COUNT(p) AS num_people ORDER BY num_people DESC LIMIT 1```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Where did most of them study?", "output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education) RETURN e.university, COUNT(p) AS num_people ORDER BY num_people DESC LIMIT 1```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Where does most marketing managers work?", "output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company) WHERE toLower(pos.title) CONTAINS 'marketing manager' RETURN c.name, COUNT(p) AS num_people ORDER BY num_people DESC LIMIT 1```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Do I have anyone with expertise on Java and Cyber security?", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s1:Skill), (p)-[:HAS_SKILL]->(s2:Skill) WHERE toLower(s1.name) CONTAINS 'java' AND toLower(s2.name) CONTAINS 'cyber security' RETURN p```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: How many Texas-based experts do I have on Java?", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill) MATCH (p)-[:HAS_POSITION]->(pos:Position) WHERE toLower(s.name) CONTAINS 'java' AND toLower(s.level) CONTAINS 'expert' AND (toLower(pos.location) CONTAINS 'texas' OR toLower(pos.location) CONTAINS 'tx') RETURN COUNT(p)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Which data scientist is based out of Texas?", "output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(pos:Position) WHERE toLower(pos.title) CONTAINS 'data scientist' AND (toLower(pos.location) CONTAINS 'texas' OR toLower(pos.location) CONTAINS 'tx') RETURN p```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: I have to fill 10 Front end roles. Who are all I have based on ideal skillsets for a front end role?", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill) WHERE toLower(s.name) IN ['html', 'css', 'javascript', 'react', 'angular', 'vue'] WITH p, COUNT(s) AS skill_count ORDER BY skill_count DESC LIMIT 10 RETURN p```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Which skill is popular among people with bachelor degrees?", "output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education), (p)-[:HAS_SKILL]->(s:Skill) WHERE toLower(e.degree) CONTAINS 'bachelor' WITH s, COUNT(p) AS person_count ORDER BY person_count DESC LIMIT 1 RETURN s.name, person_count```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: How many people have a degree in computer science from Stanford University?", "output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(e.degree) CONTAINS 'computer science' AND toLower(e.university) CONTAINS 'stanford' RETURN COUNT(p)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: How many people have worked as a software engineer at Google?","output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company) WHERE toLower(pos.title) CONTAINS 'software engineer' AND toLower(c.name) CONTAINS 'google' RETURN COUNT(p)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: How many people have a skill level of intermediate in Python?","output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill) WHERE toLower(s.name) CONTAINS 'python' AND toLower(s.level) CONTAINS 'intermediate' RETURN COUNT(p)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: How many people have held a position in New York City?","output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(pos:Position) WHERE toLower(pos.location) CONTAINS 'new york city' RETURN COUNT(p)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: How many people have a master's degree in data science?","output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(e.degree) CONTAINS 'master' AND toLower(e.degree) CONTAINS 'data science' RETURN COUNT(p)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: How many people have worked as a data analyst at Facebook?","output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company) WHERE toLower(pos.title) CONTAINS 'data analyst' AND toLower(c.name) CONTAINS 'facebook' RETURN COUNT(p)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: How many people have a skill level of beginner in JavaScript?","output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill) WHERE toLower(s.name) CONTAINS 'javascript' AND toLower(s.level) CONTAINS 'beginner' RETURN COUNT(p)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: How many people have a bachelor's degree in electrical engineering?","output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(e.degree) CONTAINS 'bachelor' AND toLower(e.degree) CONTAINS 'electrical engineering' RETURN COUNT(p)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: How many people have worked as a project manager in London?","output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(pos:Position) WHERE toLower(pos.title) CONTAINS 'project manager' AND toLower(pos.location) CONTAINS 'london' RETURN COUNT(p)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: How many people have a PhD in physics from MIT?","output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(e.degree) CONTAINS 'phd' AND toLower(e.degree) CONTAINS 'physics' AND toLower(e.university) CONTAINS 'mit' RETURN COUNT(p)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: How many people have a degree in Computer Science from Stanford University?","output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(e.degree) CONTAINS 'computer science' AND toLower(e.university) CONTAINS 'stanford university' RETURN COUNT(p)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: How many people have worked as a Software Engineer at Google?","output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company) WHERE toLower(pos.title) CONTAINS 'software engineer' AND toLower(c.name) CONTAINS 'google' RETURN COUNT(p)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: How many people have a skill level of 'intermediate' in Python?","output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill) WHERE toLower(s.name) CONTAINS 'python' AND toLower(s.level) CONTAINS 'intermediate' RETURN COUNT(p)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: How many people have a Master's degree in Data Science?","output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(e.degree) CONTAINS 'master' AND toLower(e.degree) CONTAINS 'data science' RETURN COUNT(p)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: How many people have worked as a Data Analyst in New York?","output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(pos:Position) WHERE toLower(pos.title) CONTAINS 'data analyst' AND toLower(pos.location) CONTAINS 'new york' RETURN COUNT(p)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: How many people have a PhD in Physics from MIT?","output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(e.degree) CONTAINS 'phd' AND toLower(e.degree) CONTAINS 'physics' AND toLower(e.university) CONTAINS 'mit' RETURN COUNT(p)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: How many people have worked as a Product Manager at Amazon?","output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company) WHERE toLower(pos.title) CONTAINS 'product manager' AND toLower(c.name) CONTAINS 'amazon' RETURN COUNT(p)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: How many people have a skill level of 'beginner' in JavaScript?","output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill) WHERE toLower(s.name) CONTAINS 'javascript' AND toLower(s.level) CONTAINS 'beginner' RETURN COUNT(p)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: How many people have a Bachelor's degree in Mathematics?","output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(e.degree) CONTAINS 'bachelor' AND toLower(e.degree) CONTAINS 'mathematics' RETURN COUNT(p)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: How many people have worked as a Data Scientist in San Francisco?","output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(pos:Position) WHERE toLower(pos.title) CONTAINS 'data scientist' AND toLower(pos.location) CONTAINS 'san francisco' RETURN COUNT(p)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List the top 5 people with the most skills", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill) RETURN p, COUNT(s) as skill_count ORDER BY skill_count DESC LIMIT 5```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find all people who have a degree in Computer Science from MIT", "output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(e.degree) CONTAINS 'computer science' AND toLower(e.university) CONTAINS 'mit' RETURN p```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Which people have held a position at Google for more than 2 years?", "output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company) WHERE toLower(c.name) CONTAINS 'google' AND duration.between(date(pos.startDate), date(pos.endDate)).years > 2 RETURN p```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List all people who have a 'master' level skill in Python", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill) WHERE toLower(s.name) CONTAINS 'python' AND toLower(s.level) CONTAINS 'master' RETURN p```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find all positions in New York City that started in 2020", "output_text": "```MATCH (pos:Position) WHERE toLower(pos.location) CONTAINS 'new york city' AND pos.startDate STARTS WITH '2020' RETURN pos```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Which people have a Bachelor's degree with a score above 3.5?", "output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(e.degree) CONTAINS 'bachelor' AND toFloat(e.score) > 3.5 RETURN p```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List all companies where at least 3 people have held a position", "output_text": "```MATCH (c:Company)<-[:AT_COMPANY]-(:Position)<-[:HAS_POSITION]-(p:Person) WITH c, COUNT(p) as people_count WHERE people_count >= 3 RETURN c```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find all people who have a skill in Java and have worked at Amazon", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), (p)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company) WHERE toLower(s.name) CONTAINS 'java' AND toLower(c.name) CONTAINS 'amazon' RETURN p```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Which people have a Ph.D. and have held a position as a Data Scientist?", "output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education), (p)-[:HAS_POSITION]->(pos:Position) WHERE toLower(e.degree) CONTAINS 'ph.d' AND toLower(pos.title) CONTAINS 'data scientist' RETURN p```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List all skills that are held by at least 10 people", "output_text": "```MATCH (s:Skill)<-[:HAS_SKILL]-(p:Person) WITH s, COUNT(p) as people_count WHERE people_count >= 10 RETURN s```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find all people who have graduated from Stanford University with a Master's degree", "output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(e.university) CONTAINS 'stanford' AND toLower(e.degree) CONTAINS 'master' RETURN p```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Which people have held a position as a Software Engineer in California?", "output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(pos:Position) WHERE toLower(pos.title) CONTAINS 'software engineer' AND (toLower(pos.location) CONTAINS 'california' OR toLower(pos.location) CONTAINS 'ca') RETURN p```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List all positions with a start date in January 2021", "output_text": "```MATCH (pos:Position) WHERE pos.startDate STARTS WITH '2021-01' RETURN pos```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find all people who have a skill in JavaScript and have held a position as a Frontend Developer", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), (p)-[:HAS_POSITION]->(pos:Position) WHERE toLower(s.name) CONTAINS 'javascript' AND toLower(pos.title) CONTAINS 'frontend developer' RETURN p```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Which people have a Bachelor's degree in Mechanical Engineering?", "output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(e.degree) CONTAINS 'bachelor' AND toLower(e.degree) CONTAINS 'mechanical engineering' RETURN p```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List all companies where at least 5 people have held a position as a Data Analyst", "output_text": "```MATCH (c:Company)<-[:AT_COMPANY]-(:Position)<-[:HAS_POSITION]-(p:Person) WHERE toLower((:Position)<-[:HAS_POSITION]-(p)).title) CONTAINS 'data analyst' WITH c, COUNT(p) as people_count WHERE people_count >= 5 RETURN c```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find all people who have a skill in SQL and have held a position as a Database Administrator", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), (p)-[:HAS_POSITION]->(pos:Position) WHERE toLower(s.name) CONTAINS 'sql' AND toLower(pos.title) CONTAINS 'database administrator' RETURN p```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Which people have held a position in London with a start date in 2019?", "output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(pos:Position) WHERE toLower(pos.location) CONTAINS 'london' AND pos.startDate STARTS WITH '2019' RETURN p```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List all skills that are held by people who have worked at Microsoft", "output_text": "```MATCH (s:Skill)<-[:HAS_SKILL]-(p:Person)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company) WHERE toLower(c.name) CONTAINS 'microsoft' RETURN DISTINCT s```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find all people who have a Master's degree in Data Science and have held a position as a Machine Learning Engineer", "output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education), (p)-[:HAS_POSITION]->(pos:Position) WHERE toLower(e.degree) CONTAINS 'master' AND toLower(e.degree) CONTAINS 'data science' AND toLower(pos.title) CONTAINS 'machine learning engineer' RETURN p```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List the top 5 people with the highest number of skills", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill) WITH p, COUNT(s) as skill_count ORDER BY skill_count DESC LIMIT 5 RETURN p.id, p.role, p.description, skill_count```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find all people who have a degree in Computer Science and have worked at Google", "output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(e.degree) CONTAINS 'computer science' MATCH (p)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company) WHERE toLower(c.name) CONTAINS 'google' RETURN p.id, p.role, p.description```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List all positions held by people with a master's degree in the last 5 years", "output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(e.degree) CONTAINS 'master' AND (date().year - date(e.graduation_date).year) <= 5 MATCH (p)-[:HAS_POSITION]->(pos:Position) RETURN pos.id, pos.title, pos.location, pos.startDate, pos.endDate, pos.url```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find all people who have a skill level of 'expert' in Python and have worked in a position with 'data scientist' in the title", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill) WHERE toLower(s.name) CONTAINS 'python' AND toLower(s.level) CONTAINS 'expert' MATCH (p)-[:HAS_POSITION]->(pos:Position) WHERE toLower(pos.title) CONTAINS 'data scientist' RETURN p.id, p.role, p.description```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List all companies where people with a Ph.D. have worked", "output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(e.degree) CONTAINS 'ph.d' MATCH (p)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company) RETURN DISTINCT c.id, c.name```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find the average score of people who graduated from MIT", "output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(e.university) CONTAINS 'mit' RETURN AVG(toFloat(e.score))```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List all people who have worked in New York and have a skill level of 'intermediate' in Java", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill) WHERE toLower(s.name) CONTAINS 'java' AND toLower(s.level) CONTAINS 'intermediate' MATCH (p)-[:HAS_POSITION]->(pos:Position) WHERE toLower(pos.location) CONTAINS 'new york' RETURN p.id, p.role, p.description```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find the total number of positions held by people with a bachelor's degree in the last 10 years", "output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(e.degree) CONTAINS 'bachelor' AND (date().year - date(e.graduation_date).year) <= 10 MATCH (p)-[:HAS_POSITION]->(pos:Position) RETURN COUNT(pos)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List all skills of people who have worked at Amazon and have a master's degree", "output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(e.degree) CONTAINS 'master' MATCH (p)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company) WHERE toLower(c.name) CONTAINS 'amazon' MATCH (p)-[:HAS_SKILL]->(s:Skill) RETURN s.id, s.name, s.level```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find the top 3 universities with the highest number of graduates in our database", "output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education) WITH e.university as university, COUNT(p) as graduate_count ORDER BY graduate_count DESC LIMIT 3 RETURN university, graduate_count```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List all people who have a skill level of 'beginner' in JavaScript and have worked in a position with 'web developer' in the title", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill) WHERE toLower(s.name) CONTAINS 'javascript' AND toLower(s.level) CONTAINS 'beginner' MATCH (p)-[:HAS_POSITION]->(pos:Position) WHERE toLower(pos.title) CONTAINS 'web developer' RETURN p.id, p.role, p.description```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find all companies where people with a skill level of 'expert' in SQL have worked", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill) WHERE toLower(s.name) CONTAINS 'sql' AND toLower(s.level) CONTAINS 'expert' MATCH (p)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company) RETURN DISTINCT c.id, c.name```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List the top 5 skills with the highest number of experts", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill) WHERE toLower(s.level) CONTAINS 'expert' WITH s.name as skill_name, COUNT(p) as expert_count ORDER BY expert_count DESC LIMIT 5 RETURN skill_name, expert_count```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find all people who have a degree in Mathematics and have worked at Microsoft", "output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(e.degree) CONTAINS 'mathematics' MATCH (p)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company) WHERE toLower(c.name) CONTAINS 'microsoft' RETURN p.id, p.role, p.description```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List all positions held by people with a Ph.D. in Physics in the last 3 years", "output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(e.degree) CONTAINS 'ph.d' AND toLower(e.university) CONTAINS 'physics' AND (date().year - date(e.graduation_date).year) <= 3 MATCH (p)-[:HAS_POSITION]->(pos:Position) RETURN pos.id, pos.title, pos.location, pos.startDate, pos.endDate, pos.url```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find the average score of people who graduated from Stanford with a master's degree", "output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(e.university) CONTAINS 'stanford' AND toLower(e.degree) CONTAINS 'master' RETURN AVG(toFloat(e.score))```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List all people who have worked in California and have a skill level of 'expert' in Machine Learning", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill) WHERE toLower(s.name) CONTAINS 'machine learning' AND toLower(s.level) CONTAINS 'expert' MATCH (p)-[:HAS_POSITION]->(pos:Position) WHERE toLower(pos.location) CONTAINS 'california' RETURN p.id, p.role, p.description```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find the total number of positions held by people with a bachelor's degree in Engineering in the last 7 years", "output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(e.degree) CONTAINS 'bachelor' AND toLower(e.university) CONTAINS 'engineering' AND (date().year - date(e.graduation_date).year) <= 7 MATCH (p)-[:HAS_POSITION]->(pos:Position) RETURN COUNT(pos)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List all skills of people who have worked at Facebook and have a Ph.D", "output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(e.degree) CONTAINS 'ph.d' MATCH (p)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company) WHERE toLower(c.name) CONTAINS 'facebook' MATCH (p)-[:HAS_SKILL]->(s:Skill) RETURN s.id, s.name, s.level```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find the top 3 companies with the highest number of employees with a skill level of 'expert' in Data Science", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill) WHERE toLower(s.name) CONTAINS 'data science' AND toLower(s.level) CONTAINS 'expert' MATCH (p)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company) WITH c.name as company_name, COUNT(p) as expert_count ORDER BY expert_count DESC LIMIT 3 RETURN company_name, expert_count```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find the names of people who have a degree in Computer Science and are experts in Python", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), (p)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(s.name) CONTAINS 'python' AND toLower(s.level) CONTAINS 'expert' AND toLower(e.degree) CONTAINS 'computer science' RETURN p.id, p.role, p.description```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List the names of people who have worked at Google and have a Master's degree", "output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(:Position)-[:AT_COMPANY]->(c:Company), (p)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(c.name) CONTAINS 'google' AND toLower(e.degree) CONTAINS 'master' RETURN p.id, p.role, p.description```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find the names of people who have worked in New York as a software engineer and have a Bachelor's degree in Computer Science", "output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company), (p)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(pos.title) CONTAINS 'software engineer' AND toLower(pos.location) CONTAINS 'new york' AND toLower(e.degree) CONTAINS 'bachelor' AND toLower(e.university) CONTAINS 'computer science' RETURN p.id, p.role, p.description```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: How many people have worked at Amazon and have a Ph.D.?", "output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(:Position)-[:AT_COMPANY]->(c:Company), (p)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(c.name) CONTAINS 'amazon' AND toLower(e.degree) CONTAINS 'ph.d.' RETURN COUNT(p)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List the names of people who have worked as a data scientist and have a skill level of 'expert' in R programming language", "output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(pos:Position), (p)-[:HAS_SKILL]->(s:Skill) WHERE toLower(pos.title) CONTAINS 'data scientist' AND toLower(s.name) CONTAINS 'r' AND toLower(s.level) CONTAINS 'expert' RETURN p.id, p.role, p.description```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find the names of people who have worked at Microsoft and have a skill level of 'intermediate' in Java", "output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(:Position)-[:AT_COMPANY]->(c:Company), (p)-[:HAS_SKILL]->(s:Skill) WHERE toLower(c.name) CONTAINS 'microsoft' AND toLower(s.name) CONTAINS 'java' AND toLower(s.level) CONTAINS 'intermediate' RETURN p.id, p.role, p.description```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List the names of people who have a Master's degree in Data Science and have worked in San Francisco", "output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(pos:Position), (p)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(pos.location) CONTAINS 'san francisco' AND toLower(e.degree) CONTAINS 'master' AND toLower(e.university) CONTAINS 'data science' RETURN p.id, p.role, p.description```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: How many people have a Bachelor's degree in Computer Science and are experts in JavaScript?", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), (p)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(s.name) CONTAINS 'javascript' AND toLower(s.level) CONTAINS 'expert' AND toLower(e.degree) CONTAINS 'bachelor' AND toLower(e.university) CONTAINS 'computer science' RETURN COUNT(p)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find the names of people who have worked as a product manager and have a skill level of 'expert' in SQL", "output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(pos:Position), (p)-[:HAS_SKILL]->(s:Skill) WHERE toLower(pos.title) CONTAINS 'product manager' AND toLower(s.name) CONTAINS 'sql' AND toLower(s.level) CONTAINS 'expert' RETURN p.id, p.role, p.description```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List the names of people who have worked at Facebook and have a Bachelor's degree in Business Administration", "output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(:Position)-[:AT_COMPANY]->(c:Company), (p)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(c.name) CONTAINS 'facebook' AND toLower(e.degree) CONTAINS 'bachelor' AND toLower(e.university) CONTAINS 'business administration' RETURN p.id, p.role, p.description```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: How many people have a Ph.D. in Physics and are experts in C++?", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), (p)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(s.name) CONTAINS 'c++' AND toLower(s.level) CONTAINS 'expert' AND toLower(e.degree) CONTAINS 'ph.d.' AND toLower(e.university) CONTAINS 'physics' RETURN COUNT(p)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find the names of people who have worked as a software developer and have a skill level of 'intermediate' in Ruby", "output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(pos:Position), (p)-[:HAS_SKILL]->(s:Skill) WHERE toLower(pos.title) CONTAINS 'software developer' AND toLower(s.name) CONTAINS 'ruby' AND toLower(s.level) CONTAINS 'intermediate' RETURN p.id, p.role, p.description```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List the names of people who have a Master's degree in Mathematics and have worked in Boston", "output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(pos:Position), (p)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(pos.location) CONTAINS 'boston' AND toLower(e.degree) CONTAINS 'master' AND toLower(e.university) CONTAINS 'mathematics' RETURN p.id, p.role, p.description```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: How many people have a Bachelor's degree in Electrical Engineering and are experts in MATLAB?", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), (p)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(s.name) CONTAINS 'matlab' AND toLower(s.level) CONTAINS 'expert' AND toLower(e.degree) CONTAINS 'bachelor' AND toLower(e.university) CONTAINS 'electrical engineering' RETURN COUNT(p)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find the names of people who have worked as a data analyst and have a skill level of 'expert' in Tableau", "output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(pos:Position), (p)-[:HAS_SKILL]->(s:Skill) WHERE toLower(pos.title) CONTAINS 'data analyst' AND toLower(s.name) CONTAINS 'tableau' AND toLower(s.level) CONTAINS 'expert' RETURN p.id, p.role, p.description```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List the names of people who have worked at IBM and have a Master's degree in Information Technology", "output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(:Position)-[:AT_COMPANY]->(c:Company), (p)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(c.name) CONTAINS 'ibm' AND toLower(e.degree) CONTAINS 'master' AND toLower(e.university) CONTAINS 'information technology' RETURN p.id, p.role, p.description```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: How many people have a Ph.D. in Chemistry and are experts in Python?", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), (p)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(s.name) CONTAINS 'python' AND toLower(s.level) CONTAINS 'expert' AND toLower(e.degree) CONTAINS 'ph.d.' AND toLower(e.university) CONTAINS 'chemistry' RETURN COUNT(p)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find the names of people who have worked as a project manager and have a skill level of 'intermediate' in Microsoft Project", "output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(pos:Position), (p)-[:HAS_SKILL]->(s:Skill) WHERE toLower(pos.title) CONTAINS 'project manager' AND toLower(s.name) CONTAINS 'microsoft project' AND toLower(s.level) CONTAINS 'intermediate' RETURN p.id, p.role, p.description```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List the names of people who have a Bachelor's degree in Mechanical Engineering and have worked in Los Angeles", "output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(pos:Position), (p)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(pos.location) CONTAINS 'los angeles' AND toLower(e.degree) CONTAINS 'bachelor' AND toLower(e.university) CONTAINS 'mechanical engineering' RETURN p.id, p.role, p.description```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: How many people have a Master's degree in Finance and are experts in Excel?", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), (p)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(s.name) CONTAINS 'excel' AND toLower(s.level) CONTAINS 'expert' AND toLower(e.degree) CONTAINS 'master' AND toLower(e.university) CONTAINS 'finance' RETURN COUNT(p)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find the names of people who have worked as a network engineer and have a skill level of 'expert' in Cisco Networking", "output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(pos:Position), (p)-[:HAS_SKILL]->(s:Skill) WHERE toLower(pos.title) CONTAINS 'network engineer' AND toLower(s.name) CONTAINS 'cisco networking' AND toLower(s.level) CONTAINS 'expert' RETURN p.id, p.role, p.description```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List the names of people who have worked at Apple and have a Ph.D. in Computer Engineering", "output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(:Position)-[:AT_COMPANY]->(c:Company), (p)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(c.name) CONTAINS 'apple' AND toLower(e.degree) CONTAINS 'ph.d.' AND toLower(e.university) CONTAINS 'computer engineering' RETURN p.id, p.role, p.description```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: How many people have a Bachelor's degree in Civil Engineering and are experts in AutoCAD?", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), (p)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(s.name) CONTAINS 'autocad' AND toLower(s.level) CONTAINS 'expert' AND toLower(e.degree) CONTAINS 'bachelor' AND toLower(e.university) CONTAINS 'civil engineering' RETURN COUNT(p)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find the names of people who have worked as a marketing manager and have a skill level of 'intermediate' in Google Analytics", "output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(pos:Position), (p)-[:HAS_SKILL]->(s:Skill) WHERE toLower(pos.title) CONTAINS 'marketing manager' AND toLower(s.name) CONTAINS 'google analytics' AND toLower(s.level) CONTAINS 'intermediate' RETURN p.id, p.role, p.description```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List the names of people who have a Master's degree in Marketing and have worked in Chicago", "output_text": "```MATCH (p:Person)-[:HAS_POSITION]->(pos:Position), (p)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(pos.location) CONTAINS 'chicago' AND toLower(e.degree) CONTAINS 'master' AND toLower(e.university) CONTAINS 'marketing' RETURN p.id, p.role, p.description```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find the top 3 people with the highest number of skills who have worked at Google and graduated from a university with a score of 3.5 or higher", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), (p)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company), (p)-[:HAS_EDUCATION]->(edu:Education) WHERE toLower(c.name) CONTAINS 'google' AND toFloat(edu.score) >= 3.5 WITH p, COUNT(s) AS skill_count ORDER BY skill_count DESC LIMIT 3 RETURN p, skill_count```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List all the people who have held a 'Software Engineer' position in California-based companies and have expertise in Python, along with their education details", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), (p)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company), (p)-[:HAS_EDUCATION]->(edu:Education) WHERE toLower(pos.title) CONTAINS 'software engineer' AND (toLower(pos.location) CONTAINS 'california' OR toLower(pos.location) CONTAINS 'ca') AND toLower(s.name) CONTAINS 'python' AND toLower(s.level) CONTAINS 'expert' RETURN p, edu```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find the average score of all people who have worked as a 'Data Scientist' and have a skill level of 'intermediate' or higher in R programming language", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), (p)-[:HAS_POSITION]->(pos:Position), (p)-[:HAS_EDUCATION]->(edu:Education) WHERE toLower(pos.title) CONTAINS 'data scientist' AND toLower(s.name) CONTAINS 'r' AND (toLower(s.level) CONTAINS 'intermediate' OR toLower(s.level) CONTAINS 'expert') WITH p, toFloat(edu.score) AS score RETURN AVG(score)```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Retrieve the details of all positions held by people who have a Master's degree in Computer Science and have worked at companies with 'Inc.' in their name", "output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(edu:Education), (p)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company) WHERE toLower(edu.degree) CONTAINS 'master' AND toLower(edu.university) CONTAINS 'computer science' AND toLower(c.name) CONTAINS 'inc.' RETURN pos```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find the people who have a 'Product Manager' position at a New York-based company and have a skill level of 'expert' in at least two different skills", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), (p)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company) WHERE toLower(pos.title) CONTAINS 'product manager' AND (toLower(pos.location) CONTAINS 'new york' OR toLower(pos.location) CONTAINS 'ny') AND toLower(s.level) CONTAINS 'expert' WITH p, COUNT(DISTINCT s) AS skill_count WHERE skill_count >= 2 RETURN p```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find the top 3 most skilled Java experts who have worked at Google and graduated from a university with a score of 3.5 or higher", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), (p)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company), (p)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(s.name) CONTAINS 'java' AND toLower(s.level) CONTAINS 'expert' AND toLower(c.name) CONTAINS 'google' AND toFloat(e.score) >= 3.5 RETURN p, s, pos, c, e ORDER BY toFloat(s.level) DESC LIMIT 3```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List all the people who have held a position with the title 'Software Engineer' in California and have a skill level of 'intermediate' or higher in Python", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), (p)-[:HAS_POSITION]->(pos:Position) WHERE toLower(s.name) CONTAINS 'python' AND (toLower(s.level) CONTAINS 'intermediate' OR toLower(s.level) CONTAINS 'expert') AND toLower(pos.title) CONTAINS 'software engineer' AND toLower(pos.location) CONTAINS 'california' RETURN p, s, pos```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find all the people who have a Master's degree in Computer Science and have worked at a company with 'Inc.' in its name", "output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education), (p)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company) WHERE toLower(e.degree) CONTAINS 'master' AND toLower(e.university) CONTAINS 'computer science' AND toLower(c.name) CONTAINS 'inc.' RETURN p, e, pos, c```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Retrieve the details of people who have worked as a 'Data Scientist' in New York and have a skill level of 'expert' in R programming language", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), (p)-[:HAS_POSITION]->(pos:Position) WHERE toLower(s.name) CONTAINS 'r' AND toLower(s.level) CONTAINS 'expert' AND toLower(pos.title) CONTAINS 'data scientist' AND toLower(pos.location) CONTAINS 'new york' RETURN p, s, pos```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find all the people who have a Bachelor's degree from MIT and have worked at a company with 'LLC' in its name, along with their skills and positions", "output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education), (p)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company), (p)-[:HAS_SKILL]->(s:Skill) WHERE toLower(e.degree) CONTAINS 'bachelor' AND toLower(e.university) CONTAINS 'mit' AND toLower(c.name) CONTAINS 'llc' RETURN p, e, pos, c, s```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find the top 3 people with the highest number of skills who have worked at Google and have a Master's degree", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), (p)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company), (p)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(c.name) CONTAINS 'google' AND toLower(e.degree) CONTAINS 'master' RETURN p, COUNT(s) AS skill_count ORDER BY skill_count DESC LIMIT 3```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List all the people who have worked as a 'Software Engineer' in 'California' and have a skill level of 'expert' in 'Python'", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), (p)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company) WHERE toLower(pos.title) CONTAINS 'software engineer' AND (toLower(pos.location) CONTAINS 'california' OR toLower(pos.location) CONTAINS 'ca') AND toLower(s.name) CONTAINS 'python' AND toLower(s.level) CONTAINS 'expert' RETURN p, s, pos, c```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find all the people who have graduated from 'Stanford University' with a 'Bachelor's degree' and have worked at 'Amazon' as a 'Data Scientist'", "output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education), (p)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company) WHERE toLower(e.university) CONTAINS 'stanford' AND toLower(e.degree) CONTAINS 'bachelor' AND toLower(c.name) CONTAINS 'amazon' AND toLower(pos.title) CONTAINS 'data scientist' RETURN p, e, pos, c```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List all the people who have a 'PhD' degree and have worked in a 'New York' based position with a skill level of 'expert' in 'Java'", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), (p)-[:HAS_POSITION]->(pos:Position), (p)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(e.degree) CONTAINS 'phd' AND (toLower(pos.location) CONTAINS 'new york' OR toLower(pos.location) CONTAINS 'ny') AND toLower(s.name) CONTAINS 'java' AND toLower(s.level) CONTAINS 'expert' RETURN p, s, pos, e```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find all the people who have a skill level of 'intermediate' in 'JavaScript' and have worked at 'Microsoft' in a 'Washington' based position with a 'Bachelor's degree' from 'MIT'", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill), (p)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company), (p)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(s.name) CONTAINS 'javascript' AND toLower(s.level) CONTAINS 'intermediate' AND toLower(c.name) CONTAINS 'microsoft' AND (toLower(pos.location) CONTAINS 'washington' OR toLower(pos.location) CONTAINS 'wa') AND toLower(e.degree) CONTAINS 'bachelor' AND toLower(e.university) CONTAINS 'mit' RETURN p, s, pos, c, e```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find the top 3 people with the highest number of skills", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill) WITH p, COUNT(s) as skill_count ORDER BY skill_count DESC LIMIT 3 RETURN p.id, p.role, p.description, skill_count"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List all the people who have a degree in 'Computer Science' and are currently working at a company with 'Software' in its name", "output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(e.degree) CONTAINS 'computer science' MATCH (p)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company) WHERE toLower(c.name) CONTAINS 'software' AND pos.endDate = '' RETURN p.id, p.role, p.description, e.degree, e.university, c.name```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find all the people who have worked in 'New York' and have 'Python' as an expert-level skill", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill) WHERE toLower(s.name) CONTAINS 'python' AND toLower(s.level) CONTAINS 'expert' MATCH (p)-[:HAS_POSITION]->(pos:Position) WHERE toLower(pos.location) CONTAINS 'new york' RETURN p.id, p.role, p.description, s.name, s.level, pos.title, pos.location```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List all the people who have graduated from 'MIT' and are currently working in a 'California'-based company", "output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(e.university) CONTAINS 'mit' MATCH (p)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company) WHERE (toLower(pos.location) CONTAINS 'california' OR toLower(pos.location) CONTAINS 'ca') AND pos.endDate = '' RETURN p.id, p.role, p.description, e.degree, e.university, c.name, pos.title, pos.location```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find all the people who have a 'Master's degree' and have worked in a 'Texas'-based company with 'Data Analyst' as their position title", "output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(e.degree) CONTAINS 'master' MATCH (p)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company) WHERE (toLower(pos.location) CONTAINS 'texas' OR toLower(pos.location) CONTAINS 'tx') AND toLower(pos.title) CONTAINS 'data analyst' RETURN p.id, p.role, p.description, e.degree, e.university, c.name, pos.title, pos.location```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: List all the people who have 'Java' as an expert-level skill and have worked in a company with 'Google' in its name", "output_text": "```MATCH (p:Person)-[:HAS_SKILL]->(s:Skill) WHERE toLower(s.name) CONTAINS 'java' AND toLower(s.level) CONTAINS 'expert' MATCH (p)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company) WHERE toLower(c.name) CONTAINS 'google' RETURN p.id, p.role, p.description, s.name, s.level, c.name, pos.title, pos.location```"}
{"input_text": "Schema:\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_POSITION{}]->(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})\n(:Position{label:'Position',id:string,title:string,location:string,startDate:string,endDate:string,url:string})-[:AT_COMPANY{}]->(:Company{label:'Company',id:string,name:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_SKILL{}]->(:Skill{label:'Skill',id:string,name:string,level:string})\n(:Person{label:'Person',id:string,role:string,description:string})-[:HAS_EDUCATION{}]->(:Education{label:'Education',id:string,degree:string,university:string,graduation_date:string,score:string,url:string})\nQuestion: Find all the people who have a 'Ph.D.' degree and have worked in a 'London'-based company with 'Data Scientist' as their position title", "output_text": "```MATCH (p:Person)-[:HAS_EDUCATION]->(e:Education) WHERE toLower(e.degree) CONTAINS 'ph.d.' MATCH (p)-[:HAS_POSITION]->(pos:Position)-[:AT_COMPANY]->(c:Company) WHERE toLower(pos.location) CONTAINS 'london' AND toLower(pos.title) CONTAINS 'data scientist' RETURN p.id, p.role, p.description, e.degree, e.university, c.name, pos.title, pos.location```"}